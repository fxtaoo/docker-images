name: 构建推送

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    - cron: "0 0 1 * *"

jobs:
  caddy:
    runs-on: ubuntu-latest
    steps:
      - name: install curl jq
        run: sudo apt update & sudo apt install -y curl jq

      - name: Set GITHUB_ENV
        run: |
          echo "VERSION=$(curl --silent "https://api.github.com/repos/caddyserver/caddy/releases/latest" | jq -r .tag_name)" >> $GITHUB_ENV
          echo "DOCKER_HUB_TAG=$(curl --silent https://registry.hub.docker.com/v2/repositories/fxtaoo/caddy/tags | jq -r '.results | .[1] | .name')" >> $GITHUB_ENV
          echo "XCADDY_VERSION=$(curl --silent "https://api.github.com/repos/caddyserver/xcaddy/releases/latest" | jq -r .tag_name | sed 's/^v//')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: ${{ env.VERSION != env.DOCKER_HUB_TAG }}
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: ${{ env.VERSION != env.DOCKER_HUB_TAG }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: ${{ env.VERSION != env.DOCKER_HUB_TAG }}
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:caddy"
          file: ./Dockerfile
          push: true
          build-args: |
            VERSION=${{ env.VERSION }}
            XCADDY_VERSION=${{ env.XCADDY_VERSION }}
          tags: |
            fxtaoo/caddy:latest
            fxtaoo/caddy:${{ env.VERSION }}

  v2ray:
    runs-on: ubuntu-latest
    steps:
      - name: install curl jq
        run: sudo apt update & sudo apt install -y curl jq

      - name: Set GITHUB_ENV
        run: |
          echo "VERSION=$(curl --silent "https://api.github.com/repos/v2fly/v2ray-core/releases/latest" | jq -r .tag_name)" >> $GITHUB_ENV
          echo "DOCKER_HUB_TAG=$(curl --silent https://registry.hub.docker.com/v2/repositories/fxtaoo/v2ray/tags | jq -r '.results | .[1] | .name')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        if: ${{ env.VERSION != env.DOCKER_HUB_TAG }}
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: ${{ env.VERSION != env.DOCKER_HUB_TAG }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: ${{ env.VERSION != env.DOCKER_HUB_TAG }}
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:v2ray"
          file: ./Dockerfile
          push: true
          build-args: |
            VERSION=${{ env.VERSION }}
          tags: |
            fxtaoo/v2ray:latest
            fxtaoo/v2ray:${{ env.VERSION }}

  tuic-server:
    runs-on: ubuntu-latest
    steps:
      - name: install curl jq
        run: sudo apt update & sudo apt install -y curl jq

      - name: Set GITHUB_ENV
        run: |
          VERSION=$(curl --silent https://api.github.com/repos/EAimTY/tuic/tags | grep name | grep -v -e rc -e alpha -e beta | grep tuic-server | head -n1 | cut -d: -f2 | tr -d '", ')
          TAG=${VERSION##*-}
          DOCKER_HUB_TAG=$(curl --silent https://registry.hub.docker.com/v2/repositories/fxtaoo/tuic-server/tags | jq -r '.results | .[1] | .name')
          if [[ $DOCKER_HUB_TAG != "$TAG" ]] ; then echo "TAG=${TAG}" >> $GITHUB_ENV; echo "UPDATE=true" >> $GITHUB_ENV ;else echo "UPDATE=false" >> $GITHUB_ENV;fi

      - name: Set up Docker Buildx
        if: ${{ env.UPDATE }}
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: ${{ env.UPDATE }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: ${{ env.UPDATE }}
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:tuic-server"
          file: ./Dockerfile
          push: true
          build-args: |
            VERSION=${{ env.VERSION }}
          tags: |
            fxtaoo/tuic-server:latest
            fxtaoo/tuic-server:${{ env.TAG }}
